version: 2.1

# Use a package of configuration called an orb.
orbs:
  # Choose either one of the orbs below
  welcome: circleci/welcome-orb@0.4.1
  # aws-cli: circleci/aws-cli@2.0.3

# Define the jobs we want to run for this project
jobs:

  # CC6-L4-C16: Exercise: Infrastructure Creation
  create_infrastructure: # job name
      # The primary container, where your job's commands will run
      docker:
        - image: amazon/aws-cli
      steps:
        - checkout
        - run:
            name: Create Cloudformation Stack
            command: |
              aws cloudformation deploy \
                --template-file template.yml \
                --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:5} \
                --region us-west-2

  # CC6-L4-C19: Exercise: Configuration and Deployment
  configure_infrastructure: 
    docker:
      - image: python:3.7-alpine3.11
    steps:
      - checkout
      - add_ssh_keys:
          # Obtain ID from where SSH key is registered
          fingerprints: ["88:5b:9d:8e:db:f6:38:22:80:dd:e3:7d:23:80:b7:0b"] 
      - run:
          name: Install dependencies
          command: |
            # install the dependencies needed for your playbook
            apk add --update ansible 
      - run:
          name: Configure server
          command: |
            ansible-playbook -i inventory.txt main.yml

  # CC6-L4-C22: Exercise: Smoke Testing
  smoke_test:
    docker:
      - image: alpine:latest
    steps:
      - run: apk add --update curl
      - run:
          name: smoke test
          command: |
            URL="https://blog.udacity.com/"
            # Test if website exists
            if curl -s --head ${URL} 
            then
              return 0
            else
              return 1
            fi

# Sequential workflow
workflows:
  myWorkflow:
    jobs:
    # CC6-L4-C16: Exercise: Infrastructure Creation
    #  - create_infrastructure

    # CC6-L4-C19: Exercise: Configuration and Deployment
    # - configure_infrastructure

    # CC6-L4-C22: Exercise: Smoke Testing
    - smoke_test
